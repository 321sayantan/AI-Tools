

.button {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background-color: rgb(20, 20, 20);
    border: none;
    font-weight: 600;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.164);
    cursor: pointer;
    transition-duration: 0.3s;
    overflow: hidden;
    position: relative;
    gap: 2px;
  }
  
  .svgIcon {
    width: 12px;
    transition-duration: 0.3s;
  }
  
  .svgIcon path {
    fill: white;
  }
  
  .button:hover {
    transition-duration: 0.3s;
    background-color: rgb(255, 69, 69);
    align-items: center;
    gap: 0;
  }
  
  .bin-top {
    transform-origin: bottom right;
  }
  .button:hover .bin-top {
    transition-duration: 0.5s;
    transform: rotate(160deg);
  }
  
  
  .modelViewPort {
    perspective: 1000px;
    width: 74px;  
    height: 74px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    background: #000;
    overflow: hidden;
  }
  
  .eva {
    --EVA-ROTATION-DURATION: 4s;
    transform-style: preserve-3d;
    animation: rotateRight var(--EVA-ROTATION-DURATION) linear infinite alternate;
  }
  
  .head {
    position: relative;
    width: 20px;  /* Adjusted from 6px to 20px */
    height: 14px; /* Adjusted from 4px to 14px */
    border-radius: 48% 53% 45% 55% / 79% 79% 20% 22%;
    background: linear-gradient(to right, white 45%, gray);
  }
  
  .eyeChamber {
    width: 15px;  /* Adjusted from 4.5px to 15px */
    height: 8px;  /* Adjusted from 2.75px to 8px */
    position: relative;
    left: 50%;
    top: 55%;
    border-radius: 45% 53% 45% 48% / 62% 59% 35% 34%;
    background-color: #0c203c;
    box-shadow: 0px 0px 2px 2px white, inset 0px 0px 0px 2px black;
    transform: translate(-50%, -50%);
    animation: moveRight var(--EVA-ROTATION-DURATION) linear infinite alternate;
  }
  
  .eye {
    width: 3px;  /* Adjusted from 1.2px to 3px */
    height: 4px; /* Adjusted from 1.5px to 4px */
    position: absolute;
    border-radius: 50%;
  }
  
  .eye:first-child {
    left: 20%;   /* Adjusted from 12% to 20% */
    top: 50%;
    background: repeating-linear-gradient(65deg, #9bdaeb 0px, #9bdaeb 1px, white 2px);
    box-shadow: inset 0px 0px 5px #04b8d5, 0px 0px 15px 1px #0bdaeb;
    transform: translate(0, -50%) rotate(-65deg);
  }
  
  .eye:nth-child(2) {
    right: 20%;  /* Adjusted from 12% to 20% */
    top: 50%;
    background: repeating-linear-gradient(-65deg, #9bdaeb 0px, #9bdaeb 1px, white 2px);
    box-shadow: inset 0px 0px 5px #04b8d5, 0px 0px 15px 1px #0bdaeb;
    transform: translate(0, -50%) rotate(65deg);
  }
  
  .body {
    width: 20px;  /* Adjusted from 6px to 20px */
    height: 30px; /* Adjusted from 8px to 30px */
    position: relative;
    margin-block-start: 1px; /* Adjusted from 0.25rem to 1px */
    border-radius: 47% 53% 45% 55% / 12% 9% 90% 88%;
    background: linear-gradient(to right, white 35%, gray);
  }
  
  .hand {
    position: absolute;
    left: -5px;  /* Adjusted from -1.5px to -5px */
    top: 4px;    /* Adjusted from 0.75px to 4px */
    width: 6px;  /* Adjusted from 2px to 6px */
    height: 18px; /* Adjusted from 5.5px to 18px */
    border-radius: 40%;
    background: linear-gradient(to left, white 15%, gray);
    box-shadow: 5px 0px 5px rgba(0, 0, 0, 0.25);
    transform: rotateY(55deg) rotateZ(10deg);
  }
  
  .hand:first-child {
    animation: compensateRotation var(--EVA-ROTATION-DURATION) linear infinite alternate;
  }
  
  .hand:nth-child(2) {
    left: 92%;
    background: linear-gradient(to right, white 15%, gray);
    transform: rotateY(55deg) rotateZ(-10deg);
    animation: compensateRotationRight var(--EVA-ROTATION-DURATION) linear infinite alternate;
  }
  
  .scannerThing {
    width: 0;
    height: 0;
    position: absolute;
    left: 60%;
    top: 10%;
    border-top: 180px solid #9bdaeb;  /* Adjust this if needed for scaling */
    border-left: 250px solid transparent; /* Adjust this if needed for scaling */
    border-right: 250px solid transparent; /* Adjust this if needed for scaling */
    transform-origin: top left;
    mask: linear-gradient(to right, white, transparent 35%);
    animation: glow 2s cubic-bezier(0.86, 0, 0.07, 1) infinite;
  }
  
  .scannerOrigin {
    position: absolute;
    width: 8px;  /* Keep this consistent or adjust as needed */
    aspect-ratio: 1;
    border-radius: 50%;
    left: 60%;
    top: 10%;
    background: #9bdaeb;
    box-shadow: inset 0px 0px 5px rgba(0, 0, 0, 0.5);
    animation: moveRight var(--EVA-ROTATION-DURATION) linear infinite;
  }
  
  /* Adjusted keyframe animations if needed */
  @keyframes rotateRight {
    from {
      transform: rotateY(0deg);
    }
    to {
      transform: rotateY(25deg);
    }
  }
  
  @keyframes moveRight {
    from {
      transform: translate(-50%, -50%);
    }
    to {
      transform: translate(-40%, -50%);
    }
  }
  
  @keyframes compensateRotation {
    from {
      transform: rotateY(55deg) rotateZ(10deg);
    }
    to {
      transform: rotateY(30deg) rotateZ(10deg);
    }
  }
  
  @keyframes compensateRotationRight {
    from {
      transform: rotateY(55deg) rotateZ(-10deg);
    }
    to {
      transform: rotateY(70deg) rotateZ(-10deg);
    }
  }
  
  @keyframes glow {
    from {
      opacity: 0;
    }
    20% {
      opacity: 1;
    }
    45% {
      transform: rotate(-25deg);
    }
    75% {
      transform: rotate(5deg);
    }
    100% {
      opacity: 0;
    }
  }
  